# `version` is now deprecated
# https://docs.docker.com/compose/compose-file/#version-top-level-element

services:
  next-ts-app:
    container_name: next-ts-app
    build:
      context: ./next-ts-app
      dockerfile: prod.Dockerfile
      args:
        ENV_VARIABLE: ${ENV_VARIABLE}
        NEXT_PUBLIC_ENV_VARIABLE: ${NEXT_PUBLIC_ENV_VARIABLE}
        POSTGRES_HOST: ${POSTGRES_HOST}
        POSTGRES_PORT: ${POSTGRES_PORT}
        POSTGRES_DATABASE: ${POSTGRES_DATABASE}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    networks:
      - my_network

  next-js-app:
    container_name: next-js-app
    build:
      context: ./next-js-app
      dockerfile: prod.Dockerfile
      args:
        ENV_VARIABLE: ${ENV_VARIABLE}
        NEXT_PUBLIC_ENV_VARIABLE: ${NEXT_PUBLIC_ENV_VARIABLE}
        POSTGRES_HOST: ${POSTGRES_HOST}
        POSTGRES_PORT: ${POSTGRES_PORT}
        POSTGRES_DATABASE: ${POSTGRES_DATABASE}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    networks:
      - my_network

  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled
      - ./nginx/logs:/var/log/nginx
    ports:
      - 90:80
      - 443:443
      - 3090:3000
    depends_on:
      - next-ts-app
      - next-js-app
    restart: always
    networks:
      - my_network

  # Add more containers below

# Define a network, which allows containers to communicate
# with each other, by using their container name as a hostname
networks:
  my_network:
    external: true
